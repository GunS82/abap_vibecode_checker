[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "abap-objects-parser"
version = "1.0.0"
description = "ABAP Objects Parser - анализатор зависимостей ABAP кода"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "ABAP Parser Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["abap", "parser", "sap", "dependencies", "analysis"]

# Основные зависимости (пустые, так как используются только стандартные библиотеки)
dependencies = []

# Опциональные зависимости для разных целей
[project.optional-dependencies]
analysis = [
    "tabulate>=0.9.0",
    "pandas>=1.5.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0"
]
all = [
    "tabulate>=0.9.0",
    "pandas>=1.5.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0"
]

[project.urls]
Homepage = "https://github.com/your-username/abap-parser"
Repository = "https://github.com/your-username/abap-parser"
Issues = "https://github.com/your-username/abap-parser/issues"

[project.scripts]
abap-parser = "abap_objects_parser:main"
folder-analyzer = "folder_analyzer:main"

[tool.setuptools.packages.find]
where = ["."]  # Поиск пакетов в корневой директории
include = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["."]  
omit = [
    "tests/*",
    "setup.py",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
